@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<h2>Danh sách Khách Hàng</h2>

<div>
    <button class="btn btn-success btn-sm" id="khach_hang-add">Thêm mới</button>
</div>
<div>
    @*     
    <button class="btn btn-success btn-sm" id="sinh-vien-sort" onclick="sort_asc()">Sắp xếp</button>
    *@
</div>
<div id="khach_hang-list">
    <table class="table">
        <thead>
            <tr>
                <th>TT</th>
                <th>Khách Hàng</th>
                <th>CCCD</th>
                <th>Điện thoại</th>
                <th>Email</th>
                <th>Số bàn</th>
                <th>Cọc</th>
                <th>Hành động</th>
            </tr>
            <tr>
                <th></th>
                <th></th>
                <th style="white-space: nowrap;">
                    <button class="btn btn-success btn-sm" onclick="sort('Khach_Hang','asc')">↓</button>
                    <button class="btn btn-success btn-sm" onclick="sort('Khach_Hang','des')">↑</button>
                </th>
                <th style="white-space: nowrap;">
                    <button class="btn btn-success btn-sm" onclick="oder('Cccd','asc')">↓</button>
                    <button class="btn btn-success btn-sm" onclick="oder('Cccd','des')">↑</button>
                </th>
                <th></th>
                <th></th>
                <th></th>
                <th style="white-space: nowrap;">
                    <button class="btn btn-success btn-sm" onclick="sort('So_Ban','asc')">↓</button>
                    <button class="btn btn-success btn-sm" onclick="sort('So_Ban','des')">↑</button>
                </th>
                <th style="white-space: nowrap;">
                    <button class="btn btn-success btn-sm" onclick="oder('Coc','asc')">↓</button>
                    <button class="btn btn-success btn-sm" onclick="oder('Coc','des')">↑</button>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody id="khach-hang-list-body"></tbody>
    </table>
</div>

@* <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script> *@

@section Scripts {
    <script src='@Url.Content("~/Statics/feane-1.0.0/js/jquery-3.4.1.min.js")'></script>
}

<script>
    let dskh;

    fetch('/api/KhachHang')
        .then(response => response.json())
        .then(data => {
            dskh = data;
            const KhachHangListContainer = document.getElementById('khach-hang-list-body');
            KhachHangListContainer.innerHTML = '';

            data.forEach(KhachHang => {
                const KhachHangItem = document.createElement('tr');
                KhachHangItem.innerHTML = `
                        <td>${KhachHang.Tt}</td>
                        <td>${KhachHang.Cccd}</td>
                        <td>${KhachHang.Khach_Hang}</td>
                        <td>${KhachHang.Dien_Thoai}</td>
                        <td>${KhachHang.Email}</td>
                       <td>${KhachHang.So_Ban}</td>
                       <td>${KhachHang.Coc}</td>
                        <td>
                            <button class="btn btn-info btn-sm" onclick="viewDetail(${KhachHang.Tt})">Xem</button>
                            <button class="btn btn-warning btn-sm" onclick="editStudent(${KhachHang.Tt})">Sửa</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteStudent(${KhachHang.Tt})">Xóa</button>
                        </td>
                        `;
                KhachHangListContainer.appendChild(KhachHangItem);
            });
        })
        .catch(error => console.error('Error:', error));

    document.getElementById('khach-hang-add').addEventListener('click',
        function() {
            window.location.href = '/KhachHangView/ThemMoi';
        });

    function viewChiTiet(tt) {
        window.location.href = `/KhachHangView/ChiTiet/${tt}`;
    }

    function editKhachHang(tt) {
        window.location.href = `/KhachHangView/ChinhSua/${tt}`;
    }

    function deleteKhachHang(tt) {
        if (confirm('Bạn có chắc chắn muốn xóa Khách Hàng này?')) {
            fetch(`/api/KhachHang/${tt}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.message === 'Delete successful') {
                        alert('Khách hàng đã được xóa thành công!');
                        window.location.href = '/KhachHangView/Index';
                    } else {
                        alert('Không thể xóa khách hàng này. ' + data.error);
                    }
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
        }
    }


    // Cách 1: Hàm sort riêng chỉ dùng cho tùy viến một trường (vd: Ten)
    // function sort_asc() {
    //     dssv.sort((a, b) => (a.Ten > b.Ten ? 1 : -1));
    //     console.log(dssv);

    //     $("#sinh-vien-list-body").empty();

    //     const sinhVienListSort = document.getElementById('sinh-vien-list-body');
    //     sinhVienListSort.innerHTML = '';

    //     dssv.forEach(sinhVien => {
    //         const sinhVienItem = document.createElement('tr');
    //         sinhVienItem.innerHTML = `
    //                     <td>${sinhVien.Tt}</td>
    //                     <td>${sinhVien.Hodem}</td>
    //                     <td>${sinhVien.Ten}</td>
    //                     <td>${sinhVien.Cccd}</td>
    //                     <td>${sinhVien.Email}</td>
    //                     <td>${sinhVien.Dienthoai}</td>
    //                     <td>${sinhVien.Diem_tichluy}</td>
    //                     <td>${sinhVien.Diem_renluyen}</td>
    //                     <td>
    //                         <button class="btn btn-info btn-sm" onclick="viewDetail(${sinhVien.Tt})">Xem</button>
    //                         <button class="btn btn-warning btn-sm" onclick="editStudent(${sinhVien.Tt})">Sửa</button>
    //                         <button class="btn btn-danger btn-sm" onclick="deleteStudent(${sinhVien.Tt})">Xóa</button>
    //                     </td>
    //                     `;
    //         sinhVienListSort.appendChild(sinhVienItem);
    //     });
    // }


    // Cách 2: Viết tùy biến sắp xếp các trường
    // Định nghĩa hàm sắp xếp. Trong đó có 2 tham số
    // sort_field: là trường sẽ sắp xếp
    // sort_type: là kiểu sắp xếp (acs: tăng dần, des: giảm dẫn)

    function sort(sort_field, sort_type) {
        dskh.sort((a, b) => {
            // Kiểm tra xem giá trị của trường sắp xếp có phải là chuỗi không
            if (typeof a[sort_field] === 'string') {
                // Nếu kiểu sắp xếp là giảm dần
                if (sort_type === "des") {
                    // So sánh chuỗi và trả về kết quả để sắp xếp giảm dần
                    return b[sort_field].toLowerCase().localeCompare(a[sort_field].toLowerCase());
                } else {
                    // Nếu kiểu sắp xếp không phải giảm dần (tức là tăng dần), so sánh chuỗi và trả về kết quả để sắp xếp tăng dần
                    return a[sort_field].toLowerCase().localeCompare(b[sort_field].toLowerCase());
                }
            } else {
                // Nếu giá trị của trường sắp xếp không phải là chuỗi (tức là số), so sánh trực tiếp để sắp xếp
                if (sort_type === "des") {
                    // Sắp xếp giảm dần
                    return b[sort_field] - a[sort_field];
                } else {
                    // Sắp xếp tăng dần
                    return a[sort_field] - b[sort_field];
                }
            }
        });
        console.log(dskh);

        reload(dskh);
    }


    function reload(dskh) {
        $("#khach-hang-list-body").empty();

        const KhachHangListSort = document.getElementById('khach-hang-list-body');
        KhachHangListSort.innerHTML = '';

        dskh.forEach(KhachHang => {
            const KhachHangItem = document.createElement('tr');
            KhachHangItem.innerHTML = `
                                <td>${KhachHang.Tt}</td>
                                <td>${KhachHang.Cccd}</td>
                                <td>${KhachHang.Khach_Hang}</td>
                                <td>${KhachHang.Dien_Thoai}</td>
                                <td>${KhachHang.Email}</td>
                                <td>${KhachHang.So_Ban}</td>
                                <td>${KhachHang.Coc}</td>
                                <td>
                                    <button class="btn btn-info btn-sm" onclick="viewDetail(${KhachHang.Tt})">Xem</button>
                                    <button class="btn btn-warning btn-sm" onclick="editStudent(${KhachHang.Tt})">Sửa</button>
                                    <button class="btn btn-danger btn-sm" onclick="deleteStudent(${KhachHang.Tt})">Xóa</button>
                                </td>
                                `;
            KhachHangListSort.appendChild(KhachHangItem);
        });
    }

    // Gọi qua API để sắp xếp
    function oder(sort_field, sort_type) {
        // // Sử dụng Fetch để gọi API
        // fetch(`/api/student/sort?sortBy=${sort_field}&order=${sort_type}`)
        //     .then(response => response.json())
        //     .then(data => {
        //         reload(data);
        //     })
        //     .catch(error => {
        //         console.error('Error sorting students:', error);
        //     });

        // Sử dụng jQuery để gọi API
        $.ajax({
            url: '/api/KhachHang/sort',
            type: 'GET',
            data: { sortBy: sort_field, order: sort_type },
            success: function(data) {
                var dskh = JSON.parse(data);
                reload(dskh);
            },
            error: function(xhr, status, error) {
                console.error('Error sorting students:', error);
            }
        });
    }
</script>